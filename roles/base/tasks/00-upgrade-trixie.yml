---
- name: Apt clean
  ansible.builtin.apt:
    clean: true
  become: true

- name: Get filesystem facts
  ansible.builtin.setup:
    filter: ansible_mounts

- name: Fail if free space on / is below 5 GiB
  ansible.builtin.assert:
    that:
      - item.size_available > (5 * 1024 * 1024 * 1024)
    fail_msg: "Free disk space on {{ item.mount }} is below 5 GiB"
  loop: "{{ ansible_mounts }}"
  when: item.mount == "/"

- name: All apt packages up to date
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
  become: true

- name: Apt autoremove
  ansible.builtin.apt:
    autoremove: true
  become: true

- name: Apt clean
  ansible.builtin.apt:
    clean: true
  become: true

- name: Check if reboot required
  ansible.builtin.stat:
    path: /run/reboot-required
    get_checksum: false
  register: reboot_required_file

- name: Reboot if required
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 60
    test_command: whoami
  when: reboot_required_file.stat.exists
  become: true

- name: Switch OS from bookworm to trixie
  ansible.builtin.replace:
    path: /etc/apt/sources.list
    regexp: 'bookworm'
    replace: 'trixie'
  become: true

- name: Find all 3rd-party repos
  ansible.builtin.find:
    paths: /etc/apt/sources.list.d
    patterns: '*'
    recurse: false
  register: third_party_repos

- name: Switch 3rd-party repos from bookworm to trixie
  ansible.builtin.replace:
    path: "{{ item.path }}"
    regexp: 'bookworm'
    replace: 'trixie'
  loop: "{{ third_party_repos.files }}"
  loop_control:
    label: "{{ item.path }}"
  become: true

- name: Use apt to move to trixie
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
  become: true

- name: Get distribution version
  ansible.builtin.setup:
    filter: ansible_distribution*

- name: Fail if not Debian 13
  ansible.builtin.assert:
    that:
      - ansible_distribution_major_version == '13'
    fail_msg: "Upgrade to Debian 13 failed"

- name: Apt autoremove
  ansible.builtin.apt:
    autoremove: true
  become: true

- name: Apt clean
  ansible.builtin.apt:
    clean: true
  become: true

- name: Reboot on trixie
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 600
    pre_reboot_delay: 0
    post_reboot_delay: 60
    test_command: whoami
  become: true

- name: Modernize apt sources
  ansible.builtin.command:
    cmd: apt -y modernize-sources
  become: true
  register: my_output # <- Registers the command output.
  changed_when: my_output.rc != 0 # <- Uses the return code to define when the task has changed.

- name: Pause for 5 minutes for staggered upgrades
  ansible.builtin.pause:
    minutes: 5
